name: create_publish_release
on: 
  release:
    types: [created]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
      - name: Checkout without submodules
        uses: actions/checkout@v3
      - name: Setup buf
        uses: bufbuild/buf-setup-action@v1
      - name: Lint protofiles with buf
        uses: bufbuild/buf-lint-action@v1
      - name: Checkout with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
      # - name: Git Submodule Update
      #   run: |
      #     git pull --recurse-submodules
      #     git submodule update --init --recursive
      #     git submodule update --remote --recursive
      - name: Update tag in swaggerdoc
        run: | 
          echo "VERSION=$(echo ${{ github.ref }}" >> $GITHUB_ENV
          echo "NEW_VERSION=$(echo ${{ github.ref }} | sed -e 's/refs\/tags\///;s/+.*$//')" >> $GITHUB_ENV
          sed -i -e "s/version: .*/version: \"v$NEW_VERSION\"/" ./aruna/api/storage/services/v2/project_service.proto 
      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A
          git diff-index --quiet HEAD || git commit -m "Update version to $NEW_VERSION" -a
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true
          force: true
      - name: Up GH release
        run: gh release edit $VERSION --tag $NEW_VERSION --draft=false --prerelease=false
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}